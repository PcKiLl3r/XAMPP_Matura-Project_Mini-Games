:root{
    --fieldHeight: 5em;
    --fieldWidth: 5em;

    --whiteFieldColor: #bbb;
    --whiteFieldHoverColor: #999; 
    --blackFieldColor: #666;
    --blackFieldHoverColor: #444;

    --whiteFigureColor: #ddd;
    --whiteFigureHoverColor: #fff;
    --blackFigureColor: #222;
    --blackFigureHoverColor: #000;

    --whiteMarksColor: #aaa;
    --blackMarksColor: #555;
    --blackMarksTextColor: #aaa;
    --whiteMarksTextColor: #555;

    --bgColor: #008BFF;
    --chessStructureColor: #000;

    --rotateSpeed: 30s;
    --figureFallSpeed: 1s;
    --figureRotateAmount: 360deg;
    --figureDieSpeed: 1s;
    --fieldBlinkSpeed: 2s;
    --figureAttackSpeed: 1s;
}

*::before,
*::after{
margin: 0;
padding: 0;
}

body {
    background-color: var(--bgColor);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 75px;

    overflow: hidden;

    perspective: 12em;
    perspective-origin: 50% calc(50% - 12em);
}

.scene {
    position: relative;
    transform-style: preserve-3d;
    transform: translateZ(-3250px) translateX(250px) /* translateZ(-2750px) */ rotateY(90deg);
}

.scene.scene-empty {
    transform: translateZ(-4750px) translateY(1000px) translateX(0px) rotateY(-90deg);
    /* animation-name:
    sceneChangeP2ToP1, sceneRotatePl1;
  animation-duration:
    2000ms, var(--rotateSpeed);
    animation-delay: 0ms, 2000ms;
  animation-timing-function:
    ease-in-out, ease-in-out;
  animation-iteration-count:
    1, infinite; */
}

.scene.scene-playerOne{
    animation-name:
    sceneChangeP2ToP1, sceneRotatePl1;
  animation-duration:
    2000ms, var(--rotateSpeed);
    animation-delay: 0ms, 2000ms;
  animation-timing-function:
    ease-in-out, ease-in-out;
  animation-iteration-count:
    1, infinite;
    transform: translateZ(-3250px) translateX(250px) /* translateZ(-2750px) */ rotateY(0deg);
}

@keyframes sceneChangeP2ToP1 {
    0% { transform: translateZ(-3250px) translateX(250px) rotateY(180deg); }
    100% { transform: translateZ(-3250px) translateX(250px) rotateY(360deg); }
}

@keyframes sceneRotatePl1 {
    0% { transform: translateZ(-3250px) translateX(250px) rotateY(0deg); }
    25% { transform: translateZ(-3250px) translateX(250px) rotateY(-10deg); }
    50% { transform: translateZ(-3250px) translateX(250px) rotateY(0deg); }
    75% { transform: translateZ(-3250px) translateX(250px) rotateY(10deg); }
    100% { transform: translateZ(-3250px) translateX(250px) rotateY(0deg); }
}

.scene-playerTwo{
    animation-name:
    sceneChangeP1ToP2, sceneRotatePl2;
  animation-duration:
    2000ms, var(--rotateSpeed);
    animation-delay: 0ms, 2000ms;
  animation-timing-function:
    ease-in-out, ease-in-out;
  animation-iteration-count:
    1, infinite;
    transform: translateZ(-3250px) translateX(250px) /* translateZ(-2750px) */ rotateY(180deg);
}

@keyframes sceneRotatePl2 {
    0% { transform: translateZ(-3250px) translateX(250px) rotateY(180deg); }
    25% { transform: translateZ(-3250px) translateX(250px) rotateY(170deg); }
    50% { transform: translateZ(-3250px) translateX(250px) rotateY(180deg); }
    75% { transform: translateZ(-3250px) translateX(250px) rotateY(190deg); }
    100% { transform: translateZ(-3250px) translateX(250px) rotateY(180deg); }
}

@keyframes sceneChangeP1ToP2 {
    0% { transform: translateZ(-3250px) translateX(250px) rotateY(0deg); }
    100% { transform: translateZ(-3250px) translateX(250px) rotateY(180deg); }
}

.ui-board{
    height: calc(1 * var(--fieldHeight));
    width: calc(8 * var(--fieldWidth));
    border: 3px solid var(--chessStructureColor);
    /* background-color: greenyellow; */
    transform-style: preserve-3d;
    z-index: 1;
    display: flex;
    flex-direction: row-reverse;
    flex-flow: row-reverse;
    flex-wrap: wrap-reverse;

    position: absolute;
    visibility: hidden;
    transform:
    translate(-50%, -50%)
    rotateX(0deg);
    top: -50em;
}

.ui-board-shown{
    position: absolute;
    visibility: visible;
    transform:
    translate(-50%, -50%)
    rotateX(0deg);
    top: 17.5em;
    animation: revealUIBoard 1.5s ease-out 1;
}

@keyframes revealUIBoard {
    0% { transform:
        translate(-50%, -50%)
        rotateZ(0deg)
        translateY(-1000px); visibility: hidden; }
    33% { transform:
        translate(-50%, -50%)
        rotateZ(-22.5deg)
        translateY(500px); visibility: visible; }
    66% { transform:
        translate(-50%, -50%)
        rotateZ(0deg)
        translateY(0px); visibility: visible; }
    100% { transform:
        translate(-50%, -50%)
        rotateZ(0deg)
        translateY(0px); visibility: visible; }
    }


.ui-board-hidden{
    position: absolute;
    visibility: hidden;
    transform:
    translate(-50%, -50%)
    rotateZ(0deg)
    translateZ(-1000px);
    top: 17.5em;
    animation: hideUIBoard 1.5s ease-out reverse 1;
}

@keyframes hideUIBoard {
    0% { transform:
        translate(-50%, -50%)
        rotateZ(0deg)
        translateY(-1000px); visibility: hidden; }
    33% { transform:
        translate(-50%, -50%)
        rotateZ(22.5deg)
        translateY(500px); visibility: visible; }
    66% { transform:
        translate(-50%, -50%)
        rotateZ(0deg)
        translateY(0px); visibility: visible; }
    100% { transform:
        translate(-50%, -50%)
        rotateZ(0deg)
        translateY(0px); visibility: visible; }
    }

.ui-bar{
    /* padding: calc(var(--fieldHeight) / 8); */
        position: relative;
        background-color: gray;
        width: calc(var(--fieldWidth) * 8 );
        height: calc(var(--fieldHeight) * 1 ) ;
        display: flex;
        flex-flow: wrap-reverse;
        flex-direction: row-reverse;
        justify-content: flex-end;
        border: solid 3px var(--chessStructureColor);
        transform-style: preserve-3d;
        gap: calc(var(--fieldHeight) / 16) calc(var(--fieldHeight) / 16);
}

.ui-bar-black{
    /* padding: calc(var(--fieldHeight) / 8); */
        position: absolute;
        top: 0;
        left: 0;
        background-color: gray;
        width: calc(var(--fieldWidth) * 8 );
        height: calc(var(--fieldHeight) * 1 ) ;
        display: flex;
        flex-flow: wrap-reverse;
        flex-direction: row-reverse;
        justify-content: flex-end;
        border: solid 3px var(--chessStructureColor);
        transform-style: preserve-3d;
        transform: rotateZ(180deg) rotateX(180deg) /* translateX(calc(0 - calc(var(--fieldHeight)))) */;
        gap: calc(var(--fieldHeight) / 16) calc(var(--fieldHeight) / 16);
}

.ui-btn{
    position: relative;
    height: 100%;
    width: calc(var(--fieldWidth) * 1) !important;
    transform-style: preserve-3d;
    /* background-color: white; */
    display: flex;
    align-items: center;
    justify-content: center;
}

.bg-menu{
    background-image: url('../assets/svg/btns-black/bars-solid.svg');
    background-size: contain;
    background-position: 50% 50%;
    background-size: 45%;
    background-repeat: no-repeat;
}

.bg-menu-white{
    background-image: url('../assets/svg/bars-solid.svg');
    background-size: contain;
    background-position: 50% 50%;
    background-size: 45%;
    background-repeat: no-repeat;
}

.bg-flag{
    background-image: url('../assets/svg/btns-black/flag-solid.svg');
    background-size: contain;
    background-position: 50% 50%;
    background-size: 45%;
    background-repeat: no-repeat;
}

.bg-flag-white{
    background-image: url('../assets/svg/flag-solid.svg');
    background-size: contain;
    background-position: 50% 50%;
    background-size: 45%;
    background-repeat: no-repeat;
}

.figure-white:hover > .chessCard > .card-back, .figure-white:hover > .chessCard > .card-bot, .figure-white:hover > .chessCard > .card-front, .figure-white:hover > .chessCard > .card-left, .figure-white:hover > .chessCard > .card-right, .figure-white:hover > .chessCard > .card-top 
{
    background-color: var(--whiteFigureHoverColor);
    border: solid 5px var(--blackFigureHoverColor);
}

.figure-black:hover > .chessCard > .card-back, .figure-black:hover > .chessCard > .card-bot, .figure-black:hover > .chessCard > .card-front, .figure-black:hover > .chessCard > .card-left, .figure-black:hover > .chessCard > .card-right, .figure-black:hover > .chessCard > .card-top 
{
    background-color: var(--blackFigureHoverColor);
    border: solid 5px var(--whiteFigureHoverColor);
}

.figure-white:focus > .chessCard > .card-back, .figure-white:focus > .chessCard > .card-bot, .figure-white:focus > .chessCard > .card-front, .figure-white:focus > .chessCard > .card-left, .figure-white:focus > .chessCard > .card-right, .figure-white:focus > .chessCard > .card-top 
{
    background-color: var(--whiteFigureHoverColor);
    border: solid 5px var(--blackFigureHoverColor);
}

.figure-black:focus > .chessCard > .card-back, .figure-black:focus > .chessCard > .card-bot, .figure-black:focus > .chessCard > .card-front, .figure-black:focus > .chessCard > .card-left, .figure-black:focus > .chessCard > .card-right, .figure-black:focus > .chessCard > .card-top 
{
    background-color: var(--blackFigureHoverColor);
    border: solid 5px var(--whiteFigureHoverColor);
}

.whiteQuickActions{
    padding: calc(var(--fieldHeight) / 16) 0;
    position: absolute;
    right: 110%;
    bottom: 50%;
    background-color: #222;
    width: calc(var(--fieldWidth) * 2 );
    /* height: calc(var(--fieldHeight) * 4 ) ; */
    display: flex;
    flex-flow: wrap-reverse;
    flex-direction: row-reverse;
    justify-content: space-evenly;
    border: solid 3px var(--chessStructureColor);
    transform-style: preserve-3d;
    gap: calc(var(--fieldHeight) / 16) calc(var(--fieldHeight) / 16);
}

.whiteQuickActions-shown{
    visibility: visible;
    animation: revealQAWhite 2s ease-in-out 1;
}

.whiteQuickActions-hidden{
    visibility: hidden;
    transform: rotateY(180deg) translateZ(2000px);
    animation: hideQAWhite 2s ease-in-out reverse 1;
}

@keyframes revealQAWhite {
    0% { transform: rotateY(180deg) translateZ(2000px); visibility: hidden; }
    25% { transform: rotateY(180deg) translateZ(0px); visibility: visible; }
    50% { transform: rotateY(-22.5deg) translateZ(0px); visibility: visible; }
    75% { transform: rotateY(22.5deg); visibility: visible; }
    100% { transform: rotateY(0deg); visibility: visible; }
    }

    @keyframes hideQAWhite {
        0% { transform: rotateY(180deg) translateZ(2000px); visibility: hidden; }
        25% { transform: rotateY(180deg) translateZ(0px); visibility: visible; }
        50% { transform: rotateY(-22.5deg) translateZ(0px); visibility: visible; }
        75% { transform: rotateY(22.5deg); visibility: visible; }
        100% { transform: rotateY(0deg); visibility: visible; }
        }

.blackQuickActions{
    padding: calc(var(--fieldHeight) / 16) 0;
    position: absolute;
    left: 110%;
    top: 50%;
    background-color: #ddd;
    width: calc(var(--fieldWidth) * 2);
    /* height: calc(var(--fieldHeight) * 4) ; */
    display: flex;
    flex-flow: wrap-reverse;
    flex-direction: row-reverse;
    justify-content: space-evenly;
    border: solid 3px var(--chessStructureColor);
    /* transform: rotateZ(180deg); */
    transform-style: preserve-3d;
    gap: calc(var(--fieldHeight) / 16) calc(var(--fieldHeight) / 16);
}

.blackQuickActions-shown{
    visibility: visible;
    transform: rotateZ(180deg);
    animation: revealQABlack 2s ease-in-out 1;
}

.blackQuickActions-hidden{
    visibility: hidden;
    transform: rotateZ(180deg) rotateY(180deg) translateZ(2000px);
    animation: hideQABlack 2s ease-in-out reverse 1;
}

@keyframes revealQABlack {
    0% { transform: rotateZ(180deg) rotateY(180deg) translateZ(2000px); visibility: hidden; }
    25% { transform: rotateZ(180deg) rotateY(180deg) translateZ(0px); visibility: visible; }
    50% { transform: rotateZ(180deg) rotateY(-22.5deg) translateZ(0px); visibility: visible; }
    75% { transform: rotateZ(180deg) rotateY(22.5deg); visibility: visible; }
    100% { transform: rotateZ(180deg) rotateY(0deg); visibility: visible; }
    }

    @keyframes hideQABlack {
        0% { transform: rotateZ(180deg) rotateY(180deg) translateZ(2000px); visibility: hidden; }
        25% { transform: rotateZ(180deg) rotateY(180deg) translateZ(0px); visibility: visible; }
        50% { transform: rotateZ(180deg) rotateY(-22.5deg) translateZ(0px); visibility: visible; }
        75% { transform: rotateZ(180deg) rotateY(22.5deg); visibility: visible; }
        100% { transform: rotateZ(180deg) rotateY(0deg); visibility: visible; }
        }

.chessboard{
    height: calc(8 * var(--fieldHeight));
    width: calc(8 * var(--fieldWidth));
    border: 3px solid var(--chessStructureColor);

    position: absolute;
    top: 37.5em;
    transform:
    translate(-50%, -50%)
    rotateX(90deg);
    transform-style: preserve-3d;
    /* width: 15em;
    height: 15em;
    background-image:
    radial-gradient(#fff0, #000 75%),
    repeating-conic-gradient(
        from 45deg,
        #fff 0deg 90deg,
        #000 90deg 180deg);
    background-size: 100%, 1em 1em; */
}

/* .chessboard-assemble{
    animation: CBoardScaleOut 0.5s ease-in-out 1;
}

@keyframes CBoardScaleOut {
    0% { transform:
        scaleX(0.1)
        scaleY(0.1)
        scaleZ(0.1)
        translate(-50%, -50%)
        rotateX(90deg); }
    100% { transform:
        scaleX(1)
        scaleY(1)
        scaleZ(1)
        translate(-50%, -50%)
        rotateX(90deg); }
    } */

.row{
    display: flex;
    width: calc(8 * var(--fieldWidth));
    transform-style: preserve-3d;
    height: /* calc(8 *  */var(--fieldHeight)/* ) */;
}

/* .row:nth-child(2n){
    flex-direction: row-reverse;
} */

.row > .field{
    -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Old versions of Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome, Edge, Opera and Firefox */

    position: relative;
    display: flex;
    width: var(--fieldWidth);
    height: var(--fieldHeight);
    background-color: var(--blackFieldColor);
    transform-style: preserve-3d;
    justify-content: center;
    align-items: center;
}

.row > .field:nth-child(2n){
    width: var(--fieldWidth);
    height: var(--fieldHeight);
    background-color: var(--whiteFieldColor);
}

.row:nth-child(2n) > .field{
    width: var(--fieldWidth);
    height: var(--fieldHeight);
    background-color: var(--whiteFieldColor);
}

.row:nth-child(2n) > .field:nth-child(2n){
    width: var(--fieldWidth);
    height: var(--fieldHeight);
    background-color: var(--blackFieldColor);
}


/* @keyframes blinkFieldBlack {
    0% { background-color: #464; }
    50% { background-color: #353; }
    100% { background-color: #464; }
    }

    @keyframes blinkFieldWhite {
        0% { background-color: #686; }
        50% { background-color: #575; }
        100% { background-color: #686; } */

.row:nth-child(2n) > .field:hover,
.row:nth-child(2n) > .field:focus{
    background-color: var(--whiteFieldHoverColor);
}

.row:nth-child(2n) > .field:nth-child(2n):hover,
.row:nth-child(2n) > .field:nth-child(2n):focus{
    background-color: var(--blackFieldHoverColor);
}

.row > .field:hover,
.row > .field:focus{
    background-color: var(--blackFieldHoverColor);
}

.row > .field:nth-child(2n):hover,
.row > .field:nth-child(2n):focus{
    background-color: var(--whiteFieldHoverColor);
}

.bg-black{
    background-color: #000 !important;
    border: solid 3px white;
}

.fieldMarksVertical{
    position: absolute;
    left: -5.5%;
    top: -0%;
    height: calc(8 * var(--fieldHeight));
    width: calc(var(--fieldWidth) / 4);
    justify-content: space-around;
    display: flex;
    flex-direction: column-reverse;
    border: solid 5px var(--chessStructureColor);
}

.fieldMarksHorizontal{
    position: absolute;
    left: 0%;
    top: 102%;
    width: calc(8 * var(--fieldWidth));
    height: calc(var(--fieldHeight) / 4) ;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    border: solid 5px var(--chessStructureColor);
}

.fieldMarksVertical2{
    position: absolute;
    right: -5.5%;
    bottom: -0%;
    height: calc(8 * var(--fieldHeight));
    width: calc(var(--fieldWidth) / 4);
    justify-content: space-around;
    display: flex;
    flex-direction: column;
    border: solid 5px var(--chessStructureColor);
    transform: rotateZ(180deg);
}

.fieldMarksHorizontal2{
    position: absolute;
    right: 0%;
    bottom: 102%;
    width: calc(8 * var(--fieldWidth));
    height: calc(var(--fieldHeight) / 4) ;
    display: flex;
    flex-direction: row-reverse;
    justify-content: space-around;
    border: solid 5px var(--chessStructureColor);
    transform: rotateZ(180deg);
}

.whiteGraveyard{
    -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Old versions of Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome, Edge, Opera and Firefox */

    color: #fff;
    padding: calc(var(--fieldHeight) / 16) 0;
    position: absolute;
    left: 110%;
    top: 0%;
    background-color: #222;
    width: calc(var(--fieldWidth) * 2);
    /* height: calc(var(--fieldHeight) * 4) ; */
    display: flex;
    flex-flow: wrap-reverse;
    flex-direction: row-reverse;
    justify-content: space-evenly;
    border: solid 3px var(--chessStructureColor);
    transform-style: preserve-3d;
    gap: calc(var(--fieldHeight) / 16) calc(var(--fieldHeight) / 16);
}

.whiteGraveyard-shown{
    visibility: visible;
    transform: rotateZ(180deg);
    animation: revealWhiteGrave 2s ease-in-out 1;
}

.whiteGraveyard-hidden{
    visibility: hidden;
    transform: rotateY(180deg) translateZ(2000px);
    animation: hideWhiteGrave 2s ease-in-out reverse 1;
}

@keyframes revealWhiteGrave {
    0% { transform: rotateZ(180deg) rotateY(180deg) translateZ(2000px); visibility: hidden; }
    25% { transform: rotateZ(180deg) rotateY(180deg) translateZ(0px); visibility: visible; }
    50% { transform: rotateZ(180deg) rotateY(-22.5deg) translateZ(0px); visibility: visible; }
    75% { transform: rotateZ(180deg) rotateY(22.5deg); visibility: visible; }
    100% { transform: rotateZ(180deg) rotateY(0deg); visibility: visible; }
    }

    @keyframes hideWhiteGrave {
        0% { transform: rotateZ(180deg) rotateY(180deg) translateZ(2000px); visibility: hidden; }
        25% { transform: rotateZ(180deg) rotateY(180deg) translateZ(0px); visibility: visible; }
        50% { transform: rotateZ(180deg) rotateY(-22.5deg) translateZ(0px); visibility: visible; }
        75% { transform: rotateZ(180deg) rotateY(22.5deg); visibility: visible; }
        100% { transform: rotateZ(180deg) rotateY(0deg); visibility: visible; }
        }

.blackGraveyard{
    -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Old versions of Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome, Edge, Opera and Firefox */

    padding: calc(var(--fieldHeight) / 16) 0;
    position: absolute;
    right: 110%;
    bottom: 0%;
    background-color: #ddd;
    width: calc(var(--fieldWidth) * 2 );
    /* height: calc(var(--fieldHeight) * 4 ) ; */
    display: flex;
    flex-flow: wrap-reverse;
    flex-direction: row-reverse;
    justify-content: space-evenly;
    border: solid 3px var(--chessStructureColor);
    transform-style: preserve-3d;
    gap: calc(var(--fieldHeight) / 16) calc(var(--fieldHeight) / 16);
}

.blackGraveyard-shown{
    visibility: visible;
    animation: revealBlackGrave 2s ease-in-out 1;
}

.blackGraveyard-hidden{
    visibility: hidden;
    transform: rotateY(180deg) translateZ(2000px);
    animation: hideBlackGrave 2s ease-in-out reverse 1;
}

@keyframes revealBlackGrave {
    0% { transform: rotateY(180deg) translateZ(2000px); visibility: hidden; }
    25% { transform: rotateY(180deg) translateZ(0px); visibility: visible; }
    50% { transform: rotateY(-22.5deg) translateZ(0px); visibility: visible; }
    75% { transform: rotateY(22.5deg); visibility: visible; }
    100% { transform: rotateY(0deg); visibility: visible; }
    }

    @keyframes hideBlackGrave {
        0% { transform: rotateY(180deg) translateZ(2000px); visibility: hidden; }
        25% { transform: rotateY(180deg) translateZ(0px); visibility: visible; }
        50% { transform: rotateY(-22.5deg) translateZ(0px); visibility: visible; }
        75% { transform: rotateY(22.5deg); visibility: visible; }
        100% { transform: rotateY(0deg); visibility: visible; }
        }

.mark{
    -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Old versions of Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome, Edge, Opera and Firefox */

    color: var(--whiteMarksTextColor);
    text-align: center;
    background-color: var(--whiteMarksColor);
}

.fieldMarksHorizontal > .mark{
    line-height: calc(var(--fieldWidth) / 4);
    text-align: center;
    align-content: center;
    width: calc(var(--fieldWidth) / 2);
    height: calc(var(--fieldWidth) / 4) ;
}

.fieldMarksVertical > .mark{
    line-height: calc(var(--fieldWidth) / 3);
    text-align: center;
    align-content: center;
    width: calc(var(--fieldWidth) / 4);
    height: calc(var(--fieldWidth) / 3);
}

.fieldMarksHorizontal2 > .mark{
    line-height: calc(var(--fieldWidth) / 4);
    text-align: center;
    align-content: center;
    width: calc(var(--fieldWidth) / 2);
    height: calc(var(--fieldWidth) / 4) ;
}

.fieldMarksVertical2 > .mark{
    line-height: calc(var(--fieldWidth) / 3);
    text-align: center;
    align-content: center;
    width: calc(var(--fieldWidth) / 4);
    height: calc(var(--fieldWidth) / 3);
}

.mark:nth-child(2n){
    color: var(--blackMarksTextColor);
    background-color: var(--blackMarksColor);
}

.bottomLeftBox{
    position: absolute;
    left: -3.9%;
    top: 50%;
    width: calc(var(--fieldWidth) / 3);
    height: calc(var(--fieldWidth) / 3) ;
    background-color: #fff;
    border: solid 3px black;
    transform: translate(-50%, -50%);
}

.bottomRightBox{
    position: absolute;
    right: -8.5%;
    top: 50%;
    width: calc(var(--fieldWidth) / 3);
    height: calc(var(--fieldWidth) / 3) ;
    background-color: #fff;
    border: solid 3px black;
    transform: translate(-50%, -50%);
}

.figure{
    position: relative;
    height: calc(var(--fieldHeight) / 1.5);
    width: calc(var(--fieldWidth) / 1.5);
    transform-style: preserve-3d;

    animation: placeFigures var(--figureFallSpeed) ease-out !important;
}

/* .figure-place{
    animation: placeFigures var(--figureFallSpeed) ease-out !important;
} */

@keyframes placeFigures {
from { transform: translateZ(2250px) rotateX(0deg) rotateY(0deg) rotateZ(0deg) }
to { transform: translateZ(0px) rotateX(var(--figureRotateAmount)) rotateY(0deg) rotateZ(var(--figureRotateAmount)) }
}

.figure-white-dead {
    animation: figureWhiteDead var(--figureDieSpeed) ease-in-out !important;
}

@keyframes figureWhiteDead {
    0% { transform: translateZ(0px) }
    33% { transform: translateZ(250px) translateX(1625px) }
    66% { transform: translateZ(0px) translateX(3250px) }
    100% { transform: translateZ(0px) translateX(3250px) }
    }

    .figure-black-dead {
        animation: figureBlackDead var(--figureDieSpeed) ease-in-out !important;
    }
    
    @keyframes figureBlackDead {
        0% { transform: translateZ(0px) }
        33% { transform: translateZ(250px) translateX(-1625px) }
        66% { transform: translateZ(0px) translateX(-3250px) }
        100% { transform: translateZ(0px) translateX(-3250px) }
        }

        .figure-white-revieve {
            animation: figureWhiteRevive var(--figureDieSpeed) ease-in-out !important;
        }
        
        @keyframes figureWhiteRevive {
            0% { transform: translateZ(0px) }
            33% { transform: translateZ(250px) translateX(1625px) translateY(-1625px) }
            66% { transform: translateZ(0px) translateX(1625px) translateY(-1625px) }
            100% { transform: translateZ(0px) translateX(1625px) translateY(-1625px) }
            }

            .figure-black-revieve {
                animation: figureBlackRevieve var(--figureDieSpeed) ease-in-out !important;
            }
            
            @keyframes figureBlackRevive {
                0% { transform: translateZ(0px) }
                33% { transform: translateZ(250px) translateX(-1625px) translateY(1625px) }
                66% { transform: translateZ(0px) translateX(-1625px) translateY(1625px) }
                100% { transform: translateZ(0px) translateX(-1625px) translateY(1625px) }
                }

.figure-attack{
    animation: figureAttack var(--figureAttackSpeed) ease-in-out 1;
}

@keyframes figureAttack {
    0% { transform: translateX(0px) }
    50% { transform: translateX(5000px) }
    100% { transform: translateX(0px) }
    }

.chessCard{
    position: absolute;
    top: 50%;
    left: 50%;
    height: calc(var(--fieldHeight) / 1.5);
    width: calc(var(--fieldWidth) / 1.5);
    transform-style: preserve-3d;
    transform: translate(-50%, -50%);
}

.chessCard > .card-bot {
    display: none;
    position: absolute;
    top: 50%;
    left: 50%;
    height: calc(var(--fieldHeight) / 1.5);
    width: calc(var(--fieldWidth) / 1.5);
    transform: translate(-50%, -50%);
}

.chessCard > .card-left {
    position: absolute;
    top: 51.5%;
    left: -11.5%;
    height: calc(var(--fieldHeight) / 1.5);
    width: calc(var(--fieldWidth) / 16);
    transform: rotateY(90deg) translate(-50%, -50%);
}

.chessCard > .card-right {
    position: absolute;
    top: 51.5%;
    right: -6%;
    height: calc(var(--fieldHeight) / 1.5);
    width: calc(var(--fieldWidth) / 16);
    transform: rotateY(90deg) translate(-50%, -50%);
}

.chessCard > .card-back {
    position: absolute;
    top: -50%;
    left: -12%;
    height: calc(calc(var(--fieldHeight) / 1.5) + 3px);
    width: calc(var(--fieldWidth) / 16);
    transform: rotateY(90deg) rotateX(-90deg) translate(-50%, -50%);
}

.chessCard > .card-front {
    position: absolute;
    top: 50%;
    right: -7%;
    height: calc(calc(var(--fieldHeight) / 1.5) + 3px);
    width: calc(var(--fieldWidth) / 16);
    transform: rotateY(90deg) rotateX(90deg) translate(-50%, -50%);
}

.chessCard > .card-top {
    border: #000 solid 15px;
    position: absolute;
    top: 0;
    right: -1px;
    height: calc(calc(var(--fieldHeight) / 1.5) - 1px);
    width: calc(calc(var(--fieldWidth) / 1.5) + 3px);
    transform: translateZ(calc(calc(var(--fieldWidth) / 16) + 10px ));
    text-align: center;
    line-height: calc(var(--fieldHeight) / 1.5);
}

@keyframes iconsChangeP1ToP2 {
    0% { transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) }
    100% { transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )); }
}
@keyframes iconsChangeP2ToP1 {
    0% { transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) }
    100% { transform: rotateZ(360deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )); }
}
.scene-playerOne > .chessboard > .row > .field > .figure {
    transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP2ToP1 2s ease-in-out 1 !important;
}
.scene-playerTwo > .chessboard > .row > .field > .figure {
    transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP1ToP2 2s ease-in-out 1 !important;
}
.bg-rook{
    background-image: url('../assets/svg/chess-rook-solid.svg');
    background-size: contain;
    background-position: 50% 50%;
    background-size: 45%;
    background-repeat: no-repeat;
}
/* .scene-playerOne > .chessboard > .row > .field > .figure > .chessCard > .bg-knight {
    transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP2ToP1 2s ease-in-out 1;
}
.scene-playerTwo > .chessboard > .row > .field > .figure > .chessCard > .bg-knight {
    transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP1ToP2 2s ease-in-out 1;
} */
.bg-knight{
    background-image: url('../assets/svg/chess-knight-solid.svg');
    background-size: contain;
    background-position: 50% 50%;
    background-size: 50%;
    background-repeat: no-repeat;
}
/* .scene-playerOne > .chessboard > .row > .field > .figure > .chessCard > .bg-bishop {
    transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP2ToP1 2s ease-in-out 1;
}
.scene-playerTwo > .chessboard > .row > .field > .figure > .chessCard > .bg-bishop {
    transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP1ToP2 2s ease-in-out 1;
} */
.bg-bishop{
    background-image: url('../assets/svg/chess-bishop-solid.svg');
    background-size: contain;
    background-position: 50% 55%;
    background-size: 40%;
    background-repeat: no-repeat;
}
/* .scene-playerOne > .chessboard > .row > .field > .figure > .chessCard > .bg-king {
    transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP2ToP1 2s ease-in-out 1;
}
.scene-playerTwo > .chessboard > .row > .field > .figure > .chessCard > .bg-king {
    transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP1ToP2 2s ease-in-out 1;
} */
.bg-king{
    background-image: url('../assets/svg/chess-king-solid.svg');
    background-size: contain;
    background-position: 50%;
    background-size: 60%;
    background-repeat: no-repeat;
}
/* .scene-playerOne > .chessboard > .row > .field > .figure > .chessCard > .bg-queen {
    transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP2ToP1 2s ease-in-out 1;
}
.scene-playerTwo > .chessboard > .row > .field > .figure > .chessCard > .bg-queen {
    transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP1ToP2 2s ease-in-out 1;
} */
.bg-queen{
    background-image: url('../assets/svg/chess-queen-solid.svg');
    background-size: contain;
    background-position: 50%;
    background-size: 60%;
    background-repeat: no-repeat;
}
/* .scene-playerOne > .chessboard > .row > .field > .figure > .chessCard > .bg-pawn {
    transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP2ToP1 2s ease-in-out 1;
}
.scene-playerTwo > .chessboard > .row > .field > .figure > .chessCard > .bg-pawn {
    transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP1ToP2 2s ease-in-out 1;
} */
.bg-pawn{
    background-image: url('../assets/svg/chess-pawn-solid.svg');
    background-size: contain;
    background-position: 50%;
    background-size: 40%;
    background-repeat: no-repeat;
}
/* .scene-playerOne > .chessboard > .row > .field > .figure > .chessCard > .bg-rook-white {
    transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP2ToP1 2s ease-in-out 1;
}
.scene-playerTwo > .chessboard > .row > .field > .figure > .chessCard > .bg-rook-white {
    transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP1ToP2 2s ease-in-out 1;
} */
.bg-rook-white{
    background-image: url('../assets/svg/chess-white/chess-rook-solid.svg');
    background-size: contain;
    background-position: 50% 50%;
    background-size: 50%;
    background-repeat: no-repeat;
}
/* .scene-playerOne > .chessboard > .row > .field > .figure > .chessCard > .bg-knight-white {
    transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP2ToP1 2s ease-in-out 1;
}
.scene-playerTwo > .chessboard > .row > .field > .figure > .chessCard > .bg-knight-white {
    transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP1ToP2 2s ease-in-out 1;
} */
.bg-knight-white{
    background-image: url('../assets/svg/chess-white/chess-knight-solid.svg');
    background-size: contain;
    background-position: 50% 50%;
    background-size: 50%;
    background-repeat: no-repeat;
}
/* .scene-playerOne > .chessboard > .row > .field > .figure > .chessCard > .bg-bishop-white {
    transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP2ToP1 2s ease-in-out 1;
}
.scene-playerTwo > .chessboard > .row > .field > .figure > .chessCard > .bg-bishop-white {
    transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP1ToP2 2s ease-in-out 1;
} */
.bg-bishop-white{
    background-image: url('../assets/svg/chess-white/chess-bishop-solid.svg');
    background-size: contain;
    background-position: 50% 55%;
    background-size: 40%;
    background-repeat: no-repeat;
}
/* .scene-playerOne > .chessboard > .row > .field > .figure > .chessCard > .bg-king-white {
    transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP2ToP1 2s ease-in-out 1;
}
.scene-playerTwo > .chessboard > .row > .field > .figure > .chessCard > .bg-king-white {
    transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP1ToP2 2s ease-in-out 1;
} */
.bg-king-white{
    background-image: url('../assets/svg/chess-white/chess-king-solid.svg');
    background-size: contain;
    background-position: 50%;
    background-size: 60%;
    background-repeat: no-repeat;
}
/* .scene-playerOne > .chessboard > .row > .field > .figure > .chessCard > .bg-queen-white {
    transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP2ToP1 2s ease-in-out 1;
}
.scene-playerTwo > .chessboard > .row > .field > .figure > .chessCard > .bg-queen-white {
    transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP1ToP2 2s ease-in-out 1;
} */
.bg-queen-white{
    background-image: url('../assets/svg/chess-white/chess-queen-solid.svg');
    background-size: contain;
    background-position: 50%;
    background-size: 60%;
    background-repeat: no-repeat;
}
/* .scene-playerOne > .chessboard > .row > .field > .figure > .chessCard > .bg-pawn-white {
    transform: rotateZ(0deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP2ToP1 2s ease-in-out 1;
}
.scene-playerTwo > .chessboard > .row > .field > .figure > .chessCard > .bg-pawn-white {
    transform: rotateZ(180deg) translateZ(calc(calc(var(--fieldWidth) / 16) + 2px )) !important;
    animation: iconsChangeP1ToP2 2s ease-in-out 1;
} */
.bg-pawn-white{
    background-image: url('../assets/svg/chess-white/chess-pawn-solid.svg');
    background-size: contain;
    background-position: 50%;
    background-size: 40%;
    background-repeat: no-repeat;
}

.figure-white > .chessCard > .card-back, .figure-white > .chessCard > .card-bot, .figure-white > .chessCard > .card-front, .figure-white > .chessCard > .card-left, .figure-white > .chessCard > .card-right, .figure-white > .chessCard > .card-top{
    background-color: var(--whiteFigureColor);
    border: solid 5px var(--blackFigureColor);
}

.figure-black > .chessCard > .card-back, .figure-black > .chessCard > .card-bot, .figure-black > .chessCard > .card-front, .figure-black > .chessCard > .card-left, .figure-black > .chessCard > .card-right, .figure-black > .chessCard > .card-top{
    background-color: var(--blackFigureColor);
    border: solid 5px var(--whiteFigureColor);
}

/* .chessCard:hover .card-back, .chessCard:hover .card-bot, .chessCard:hover .card-front, .chessCard:hover .card-left, .chessCard:hover .card-right, .chessCard:hover .card-top {
    background-color: var(--whiteFigureHoverColor);
} */

.field:hover > .figure-white > .chessCard > .card-back, .field:hover > .figure-white > .chessCard > .card-bot, .field:hover > .figure-white > .chessCard > .card-front, .field:hover > .figure-white > .chessCard > .card-left, .field:hover > .figure-white > .chessCard > .card-right, .field:hover > .figure-white > .chessCard > .card-top 
{
    background-color: var(--whiteFigureHoverColor);
    border: solid 5px var(--blackFigureHoverColor);
}

.field:hover > .figure-black > .chessCard > .card-back, .field:hover > .figure-black > .chessCard > .card-bot, .field:hover > .figure-black > .chessCard > .card-front, .field:hover > .figure-black > .chessCard > .card-left, .field:hover > .figure-black > .chessCard > .card-right, .field:hover > .figure-black > .chessCard > .card-top 
{
    background-color: var(--blackFigureHoverColor);
    border: solid 5px var(--whiteFigureHoverColor);
}

.field:focus > .figure-white > .chessCard > .card-back, .field:focus > .figure-white > .chessCard > .card-bot, .field:focus > .figure-white > .chessCard > .card-front, .field:focus > .figure-white > .chessCard > .card-left, .field:focus > .figure-white > .chessCard > .card-right, .field:focus > .figure-white > .chessCard > .card-top 
{
    background-color: var(--whiteFigureHoverColor);
    border: solid 5px var(--blackFigureHoverColor);
}

.field:focus > .figure-black > .chessCard > .card-back, .field:focus > .figure-black > .chessCard > .card-bot, .field:focus > .figure-black > .chessCard > .card-front, .field:focus > .figure-black > .chessCard > .card-left, .field:focus > .figure-black > .chessCard > .card-right, .field:focus > .figure-black > .chessCard > .card-top 
{
    background-color: var(--blackFigureHoverColor);
    border: solid 5px var(--whiteFigureHoverColor);
}

/* --whiteFieldHoverColor: #999; 
    --blackFieldColor: #666;
    --blackFieldHoverColor: #444; */

.focusedFieldBlack {
    animation: blinkFieldBlack var(--fieldBlinkSpeed) alternate ease-in-out infinite;
    border: #000 solid 5px;
}

.focusedFieldWhite {
    animation: blinkFieldWhite var(--fieldBlinkSpeed) alternate ease-in-out infinite;
    border: #000 solid 5px;
}

.checkFieldBlack {
    animation: blinkCheckFieldBlack var(--fieldBlinkSpeed) alternate ease-in-out infinite;
    border: #000 solid 5px;
}

.checkFieldWhite {
    animation: blinkCheckFieldWhite var(--fieldBlinkSpeed) alternate ease-in-out infinite;
    border: #000 solid 5px;
}

@keyframes blinkCheckFieldBlack {
    0% { background-color: #880; }
    50% { background-color: #660; }
    100% { background-color: #880; }
    }

    @keyframes blinkCheckFieldWhite {
        0% { background-color: #aa0; }
        50% { background-color: #880; }
        100% { background-color: #aa0; }
        }

.field{
    border: #000 solid 5px;
}

.enemyFieldBlack {
    animation: blinkFieldEnemyBlack var(--fieldBlinkSpeed) alternate ease-in-out infinite;
}

.enemyFieldWhite {
    animation: blinkFieldEnemyWhite var(--fieldBlinkSpeed) alternate ease-in-out infinite;
}

@keyframes blinkFieldBlack {
    0% { background-color: #464; }
    50% { background-color: #353; }
    100% { background-color: #464; }
    }

    @keyframes blinkFieldWhite {
        0% { background-color: #686; }
        50% { background-color: #575; }
        100% { background-color: #686; }
        }

        @keyframes blinkFieldEnemyBlack {
            0% { background-color: #844; }
            50% { background-color: #733; }
            100% { background-color: #844; }
            }
        
            @keyframes blinkFieldEnemyWhite {
                0% { background-color: #a66; }
                50% { background-color: #955; }
                100% { background-color: #a66; }
                }